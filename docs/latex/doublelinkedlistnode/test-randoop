


@Test
public void test0008() throws Throwable {
    if (debug)
        System.out.format("%n%s%n", "RegressionTest0.test0008");
    examples.DoublyLinkedListNode doublyLinkedListNode0 = new examples.DoublyLinkedListNode();
    examples.DoublyLinkedListNode doublyLinkedListNode1 = new examples.DoublyLinkedListNode();
    doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
    doublyLinkedListNode1.remove();
    doublyLinkedListNode1.remove();
    examples.DoublyLinkedListNode doublyLinkedListNode5 = new examples.DoublyLinkedListNode();
    doublyLinkedListNode5.remove();
    examples.DoublyLinkedListNode doublyLinkedListNode7 = new examples.DoublyLinkedListNode();
    doublyLinkedListNode5.insertRight(doublyLinkedListNode7);
    examples.DoublyLinkedListNode doublyLinkedListNode9 = new examples.DoublyLinkedListNode();
    examples.DoublyLinkedListNode doublyLinkedListNode10 = new examples.DoublyLinkedListNode();
    doublyLinkedListNode9.insertRight(doublyLinkedListNode10);
    doublyLinkedListNode10.remove();
    doublyLinkedListNode7.insertRight(doublyLinkedListNode10);
    // The following exception was thrown during execution in test generation
    try {
        doublyLinkedListNode1.insertRight(doublyLinkedListNode7);
        org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException;\
            message: parameter is not singleton");
    } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
    }
}
