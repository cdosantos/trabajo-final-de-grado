/*
 * This file was automatically generated by EvoSuite
 * Fri Feb 02 13:07:53 GMT 2024
 */

package examples;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import examples.Composite;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Composite_ESTest extends Composite_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Composite composite0 = new Composite(0);
      Composite composite1 = new Composite((-36));
      composite0.addChild(composite1);
      Composite composite2 = new Composite((-1));
      composite1.addChild(composite2);
      assertFalse(composite2.equals((Object)composite0));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Composite composite0 = new Composite(0);
      Set<Composite> set0 = composite0.children();
      assertFalse(set0.contains(composite0));
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Composite composite0 = new Composite(0);
      Composite composite1 = new Composite(0);
      composite1.addChild(composite0);
      // Undeclared exception!
      try { 
        composite0.addChild(composite1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("examples.Composite", e);
      }
  }
}
