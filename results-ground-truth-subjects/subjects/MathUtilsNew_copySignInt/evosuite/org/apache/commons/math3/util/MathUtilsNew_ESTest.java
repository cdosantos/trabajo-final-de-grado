/*
 * This file was automatically generated by EvoSuite
 * Fri Feb 02 13:10:42 GMT 2024
 */

package org.apache.commons.math3.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.util.MathUtilsNew;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MathUtilsNew_ESTest extends MathUtilsNew_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      int int0 = MathUtilsNew.copySignInt((-3094), 343);
      assertEquals(3094, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      try { 
        MathUtilsNew.copySignInt(Integer.MIN_VALUE, 0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // overflow
         //
         verifyException("org.apache.commons.math3.util.MathUtilsNew", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      int int0 = MathUtilsNew.copySignInt(0, Integer.MIN_VALUE);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      int int0 = MathUtilsNew.copySignInt(224, 204);
      assertEquals(224, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      int int0 = MathUtilsNew.copySignInt(0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      int int0 = MathUtilsNew.copySignInt(3587, (-862));
      assertEquals((-3587), int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      int int0 = MathUtilsNew.copySignInt((-862), (-862));
      assertEquals((-862), int0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      MathUtilsNew mathUtilsNew0 = new MathUtilsNew();
  }
}
