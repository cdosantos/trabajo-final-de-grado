/*
 * This file was automatically generated by EvoSuite
 * Fri Feb 02 13:07:11 GMT 2024
 */

package org.apache.commons.math3.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.util.ArithmeticUtilsNew;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArithmeticUtilsNew_ESTest extends ArithmeticUtilsNew_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ArithmeticUtilsNew arithmeticUtilsNew0 = new ArithmeticUtilsNew();
      long long0 = arithmeticUtilsNew0.subAndCheck((-845L), (-223L));
      assertEquals((-622L), long0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ArithmeticUtilsNew arithmeticUtilsNew0 = new ArithmeticUtilsNew();
      long long0 = arithmeticUtilsNew0.subAndCheck(0L, 0L);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ArithmeticUtilsNew arithmeticUtilsNew0 = new ArithmeticUtilsNew();
      long long0 = arithmeticUtilsNew0.subAndCheck((-9223372036854775801L), (-9223372036854775801L));
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ArithmeticUtilsNew arithmeticUtilsNew0 = new ArithmeticUtilsNew();
      long long0 = arithmeticUtilsNew0.subAndCheck((-1816L), (-9223372036854775808L));
      assertEquals(9223372036854773992L, long0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ArithmeticUtilsNew arithmeticUtilsNew0 = new ArithmeticUtilsNew();
      try { 
        arithmeticUtilsNew0.subAndCheck(2893L, (-9223372036854775808L));
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // overflow in addition: 2,893 + -9,223,372,036,854,775,808
         //
         verifyException("org.apache.commons.math3.util.ArithmeticUtilsNew", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ArithmeticUtilsNew arithmeticUtilsNew0 = new ArithmeticUtilsNew();
      try { 
        arithmeticUtilsNew0.subAndCheck((-9223372036854775805L), 1600L);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // overflow in addition: -9,223,372,036,854,775,805 + -1,600
         //
         verifyException("org.apache.commons.math3.util.ArithmeticUtilsNew", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ArithmeticUtilsNew arithmeticUtilsNew0 = new ArithmeticUtilsNew();
      try { 
        arithmeticUtilsNew0.subAndCheck(0L, (-9223372036854775764L));
       //  fail("Expecting exception: ArithmeticException");
       // Unstable assertion
      } catch(ArithmeticException e) {
         //
         // overflow in addition: 0 + 9,223,372,036,854,775,764
         //
         verifyException("org.apache.commons.math3.util.ArithmeticUtilsNew", e);
      }
  }
}
