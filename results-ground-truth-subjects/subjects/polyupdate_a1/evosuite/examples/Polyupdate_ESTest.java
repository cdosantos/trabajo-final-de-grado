/*
 * This file was automatically generated by EvoSuite
 * Fri Feb 02 13:11:29 GMT 2024
 */

package examples;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import examples.Polyupdate;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Polyupdate_ESTest extends Polyupdate_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Polyupdate polyupdate0 = new Polyupdate();
      polyupdate0.a1((-1755));
      assertEquals((-1755), polyupdate0.sm());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Polyupdate polyupdate0 = new Polyupdate();
      polyupdate0.add3(2942, 3427, 2942, 0);
      polyupdate0.a1(3427);
      assertEquals(16165, polyupdate0.sm());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Polyupdate polyupdate0 = new Polyupdate(arrayList0, (-4599));
      polyupdate0.a1((-4599));
      assertEquals((-9198), polyupdate0.sm());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Polyupdate polyupdate0 = new Polyupdate();
      polyupdate0.add3(0, 0, (-1708), 327);
      int int0 = polyupdate0.sm();
      assertEquals((-1381), int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Polyupdate polyupdate0 = new Polyupdate();
      polyupdate0.add3(2942, 3427, 2942, 0);
      assertEquals(9311, polyupdate0.sm());
      
      polyupdate0.clear();
      assertEquals(0, polyupdate0.sm());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Polyupdate polyupdate0 = new Polyupdate();
      polyupdate0.a1(0);
      assertEquals(0, polyupdate0.sm());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Integer integer0 = new Integer(1721);
      arrayList0.add(integer0);
      Polyupdate polyupdate0 = new Polyupdate(arrayList0, 1721);
      assertEquals(3442, polyupdate0.sm());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Polyupdate polyupdate0 = null;
      try {
        polyupdate0 = new Polyupdate((ArrayList<Integer>) null, (-626));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("examples.Polyupdate", e);
      }
  }
}
